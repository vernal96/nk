!function(t,e){"use strict";var i={name:"Selector",props:{options:{type:Array,required:!0},placeholder:{type:String,required:!0},name:{type:String,required:!1,default:""},mainClass:{type:String,required:!1,default:""},value:{required:!1,default:null},title:{type:String,required:!0},isError:{type:Boolean,required:!1,default:!1}},data:function(){return{selected:{value:null},listOpened:!1,isMobile:!1}},computed:{label:function(){return this.selected.value?this.selected.title:this.placeholder},notSelected:function(){return null===this.selected.value}},emits:["onChange"],watch:{selected:function(t){this.$emit("onChange",t.value)}},methods:{check:function(t){this.selected=t,this.listOpened=!1},openList:function(){var t=this.$refs.list,e=this.$refs.root;window.innerHeight-t.getBoundingClientRect().top-e.offsetHeight<t.offsetHeight?e.classList.add("is-reverse"):e.classList.remove("is-reverse"),this.listOpened=!this.listOpened}},beforeMount:function(){var t=this;if(this.value){var e=this.options.find((function(e){return e.value===t.value}));e&&(this.selected=e)}},mounted:function(){var t=this;e.Methods.outsideClick(this.$refs.root,(function(){t.listOpened=!1})),this.isMobile=e.Methods.isMobile()},template:'\n\t\t<div class="selector" :class="[mainClass, {\'is-active\': listOpened, \'selector_mobile\': isMobile}]" ref="root">\n\t\t\t<select :name="name" v-model="selected">\n\t\t\t\t<option \n\t\t\t\tv-for="option in options"\n\t\t\t\t:value="option"\n\t\t\t\t>{{ option.title }}</option>\n\t\t\t</select>\n\t\t\t<div class="selector__under-title" :class="{\'is-active\': selected.value}">{{ title }}</div>\n\t\t\t<div class="selector__label" :class="{\'is-error\': isError}" @click="openList">\n\t\t\t\t<div class="selector__title" :class="{\'is-disabled\': notSelected}">{{ label }}</div>\n\t\t\t\t<div class="selector__btn"></div>\n\t\t\t</div>\n\t\t\t<div class="selector__list" ref="list">\n\t\t\t\t<div \n\t\t\t\tv-for="option in options"\n\t\t\t\tclass="selector__option"\n\t\t\t\t:class="{\'is-selected\': option == selected}"\n\t\t\t\t:key="option.value"\n\t\t\t\t@click="check(option)"\n\t\t\t\t>{{ option.title }}</div>\n\t\t\t</div>\n\t\t</div>\n\t'};t.Selector=i}(this.DK=this.DK||{},DK);
